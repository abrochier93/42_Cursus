Le doit être écrit en C
Le projet doit être codé à la Norme
Le projet ne doit pas contenir de segmentation fault, bus error, double free, etc
Aucun leak ne sera toléré
Le Makefile ne doit pas relink
Le Makefile doit au minimum contenir les règles $(NAME), all, clean, fclean et re
Inclure une règle bonus à votre Makefile : L’évaluation de la partie obligatoire et de la partie bonus sont faites séparément
Le programme doit prendre en paramètre un fichier de carte se terminant par l’extension .ber

Fonctions autorisées : 
- open, close, read 
- write,
- malloc, free, perror, strerror, exit
- toutes les fonctions de la bibliothèque mathématique (option de compilation -lm, man man 3 math)
- ft_printf et tout équivalent que VOUS avez codé

Partie commune : 
- Le joueur doit collecter tous les items présents sur la carte, puis s’échapper en empruntant le chemin le plus court possible
- Les touches W, A, S et D doivent être utilisées afin de mouvoir le personnage
- Le joueur doit être capable de se déplacer dans ces 4 directions : haut, bas, gauche, droite
- Le joueur ne doit pas pouvoir se déplacer dans les murs
- À chaque mouvement, le compte total de mouvement doit être affiché dans le shell
- Vous devez utiliser une vue 2D
- Votre programme doit afficher une image dans une fenêtre
- La gestion de la fenêtre doit rester fluide (changer de fenêtre, la réduire, etc.)
- Appuyer sur la touche ESC doit fermer la fenêtre et quitter le programme proprement
- Cliquer sur la croix en haut de la fenêtre doit fermer celle-ci et quitter le programme proprement

=> Vous devez pouvoir parser tout type de carte du moment qu’elle respecte les règles énoncées ci-dessous
- La carte sera construite en utilisant 3 éléments : les murs, les items à collecter, et l’espace vide
- La carte doit être de forme rectangulaire
- La carte peut être composée de ces 5 caractères :
    0 pour un emplacement vide,
    1 pour un mur,
    C pour un item à collecter (C pour collectible),
    E pour une sortie (E pour exit),
    P pour la position de départ du personnage
- La carte doit contenir 1 sortie, au moins 1 item et 1 position de départ
- La carte doit être fermée en étant encadrée par des murs. Si ce n’est pas le cas, le programme retourne une erreur.
- Vous devez vérifier s’il existe un chemin valide (i.e. qu’il est possible d’emprunter) dans la carte.
- Si une erreur de configuration est détectée, le programme doit quitter proprement et retourner "Error\n" suivi d’un message d’erreur explicite de votre choix


Partie Bonus : 
Vous aurez des points supplémentaires si :
- Le joueur peut perdre si son personnage est touché par une patrouille ennemie.
- Vous ajoutez des sprite animations.
- Le compte total de mouvement est directement affiché sur l’écran dans la fenêtre plutôt que dans le shell.


fonction 1 : check fichiers .ber et renvoie une erreur si     
    - un fichier sans start
    - un fichier sans collectible
    - un fichier sans exit
    - un fichier sans murs
    - un fichier double start
    - un fichier double exit
    - un fichier qui n'est pas rectangulaire
    - un fichier qui n'est pas fermé par des murs
    - un caractère invalide est lu (exmeple B)
    - un fichier sans un chemin valide = existe un chemin de start to collectible et de collectible to exit
